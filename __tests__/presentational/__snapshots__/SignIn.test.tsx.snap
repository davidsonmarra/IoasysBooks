// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sign In should match a snapshot 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
  testID="SignInScreen"
>
  <View
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
          "paddingBottom": 0,
          "paddingLeft": 31,
          "paddingRight": 31,
          "paddingTop": 0,
        },
      ]
    }
  >
    <View
      accessibilityIgnoresInvertColors={true}
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/assets/background.png",
          }
        }
        style={
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "height": undefined,
              "width": undefined,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "marginBottom": 98,
          },
        ]
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "left": 50,
              "marginRight": -16.6,
              "opacity": 0,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "left": 50,
            "marginRight": -16.6,
            "opacity": 0,
          }
        }
      >
        <SvgMock />
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 0,
              "right": 50,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "opacity": 0,
            "right": 50,
          }
        }
      >
        <SvgMock />
      </View>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Array [
          Object {},
          Object {
            "opacity": 0,
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#00000052",
            "borderColor": "rgba(0, 0, 0, 0)",
            "borderRadius": 8,
            "borderWidth": 2,
            "flexDirection": "row",
            "height": 118,
            "justifyContent": "flex-end",
            "marginBottom": 31,
            "opacity": 1,
            "width": "100%",
          }
        }
      >
        <TextInput
          autoCapitalize="none"
          autoCorrect={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          style={
            Array [
              Object {
                "alignSelf": "flex-end",
                "color": "#FFFFFF",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "fontFamily": "Heebo-Regular",
                "fontSize": 31,
                "paddingBottom": 16,
                "paddingLeft": 31,
                "paddingRight": 31,
                "paddingTop": 0,
              },
            ]
          }
          testID="input-email"
        />
        <Text
          animatedStyle={
            Object {
              "value": Object {
                "bottom": 8,
                "fontSize": 16,
                "left": 16,
              },
            }
          }
          collapsable={false}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontFamily": "Heebo-Regular",
                "fontSize": 31,
                "opacity": 0.5,
                "position": "absolute",
              },
              Object {
                "bottom": 8,
                "fontSize": 16,
                "left": 16,
              },
            ]
          }
        >
          Email
        </Text>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#00000052",
            "borderColor": "rgba(0, 0, 0, 0)",
            "borderRadius": 8,
            "borderWidth": 2,
            "flexDirection": "row",
            "height": 118,
            "justifyContent": "flex-end",
            "marginBottom": 31,
            "opacity": 1,
            "width": "100%",
          }
        }
      >
        <TextInput
          autoCapitalize="none"
          autoCorrect={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          secureTextEntry={true}
          style={
            Array [
              Object {
                "alignSelf": "flex-end",
                "color": "#FFFFFF",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "fontFamily": "Heebo-Regular",
                "fontSize": 31,
                "paddingBottom": 16,
                "paddingLeft": 31,
                "paddingRight": 31,
                "paddingTop": 0,
              },
            ]
          }
          testID="input-password"
        />
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 86,
              "height": 78,
              "justifyContent": "center",
              "marginRight": 31,
              "opacity": 1,
              "paddingBottom": 16,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 16,
              "width": 167,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#B22E6F",
                  "fontFamily": "Heebo-Medium",
                  "fontSize": 31,
                },
              ]
            }
          >
            Entrar
          </Text>
        </View>
        <Text
          animatedStyle={
            Object {
              "value": Object {
                "bottom": 8,
                "fontSize": 16,
                "left": 16,
              },
            }
          }
          collapsable={false}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontFamily": "Heebo-Regular",
                "fontSize": 31,
                "opacity": 0.5,
                "position": "absolute",
              },
              Object {
                "bottom": 8,
                "fontSize": 16,
                "left": 16,
              },
            ]
          }
        >
          Senha
        </Text>
      </View>
    </View>
  </View>
</View>
`;
